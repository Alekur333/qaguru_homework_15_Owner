plugins {
    id 'java-library'
//    id 'io.qameta.allure' version '2.9.6'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}

group 'org.example'
version '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

compileTestJava {
    options.encoding = "UTF-8"
}

def allureVersion = "2.16.0",
    selenideVersion = "5.25.0-selenium-4.0.0",
    junitVersion = "5.8.1",
    slf4jVersion = "1.7.32"

// Артем Ерошенко Version для id 'io.qameta.allure' version '2.9.6'
//allure {
//    report {
//        version.set("$allureVersion")
//    }
//    adapter {
//        autoconfigure.set(true)
//        aspectjWeaver.set(true)
//        frameworks {
//            junit5 {
//                adapterVersion.set("$allureVersion")
//            }
//        }
//    }
//}
// Станислав Васенков Version для id 'io.qameta.allure' version '2.8.1'
allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.assertj:assertj-core:3.19.0",
            "org.aeonbits.owner:owner:1.0.12",
            "io.qameta.allure:allure-selenide:$allureVersion",
//            'commons-io:commons-io:2.11.0',
//            'com.codeborne:pdf-test:1.7.0',
//            'com.codeborne:xls-test:1.2',
//            'com.opencsv:opencsv:5.5.2',
            //'io.rest-assured:rest-assured:4.4.0',
            //"io.qameta.allure:allure-rest-assured:2.15.0"

    )
    testRuntimeOnly(
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }

    // преднастроенные по Tag таски для запуска из терминала или Jenkins
    // пример: gradle clean many_tests -Dbrowser=opera -Dversion=93 -Dsize=300x300 -DlastName=KUR -Dmobile=9999999999
    task properties_tests(type: Test) {
        useJUnitPlatform {
            includeTags "properties"
            excludeTags "skip"
        }
    }
    task many_tests(type: Test) {
        useJUnitPlatform {
            includeTags "properties", "smoke"
            excludeTags "prod", "skip"
        }
    }
}


